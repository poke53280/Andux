


Programming Andux API
---------------------


By using the simple Andux API you can have a scaleable, 
easy to deploy multiuser-system up and running in hours.

The users share a two dimensional surface which we call The World.
Every user is located somewhere on the surface. When you specify 
where you as a user is located, Andux returns to you all the other
users who are nearby. As long as you provide your updated position, 
Andux will give you the remote users in your surroundings.




You specify your position by creating an AreaProvider.

Andux will call getArea when it feels like.
	


You retrieve all remote users in your neighbourhood with:

	Vector getNEAR();

...where each element in the returned Vector is a KeyArea:

	KeyArea
	
	key
	Area
	
If you get null, you are alone and need not send any 
information at all!

	
----------

Example:

You create a simple AreaProvider called StayingPut

public class StayingPut implements AreaProvider {
	
	Area a = new Area(100,200);
	public Area getArea() {
		return a;
	}
}


You give it to Andux:

setLocation(new StayingPut() );

Now, every time the internals of Andux wants to have a look at
your position, it will use this StayingPut instance which you
just provided.

To read the information about all remote nodes, call getNear().
This method will return all the remote nodes:


public String show() {

	Vector v = andux.getNear();
	if (v == null || v.isEmpty()) {
		return "We are alone";
	}
	
	StringBuffer b = new StringBuffer(20*v.size());
	for(int i = 0; i < v.size(); i++) {
		b.append('\n');
		KeyArea k = (KeyArea) v.elementAt(i);
		b.append(k.state() );
	}
	return b.toString();		
}


---------------------------

But first, you have to connect:


To get the local system running, you need two lines of code:

int port = andux.connect();
andux.contact("host:port");

---------------------------



















